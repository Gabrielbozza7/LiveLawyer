require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

target 'LiveLawyerApp' do
  use_expo_modules!

  # ─── Auto-linking config for React Native modules ───
  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"]
  else
    config_command = [
      'node',
      '--no-warnings',
      '--eval',
      'require(require.resolve(\'expo-modules-autolinking\', { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end
  config = use_native_modules!(config_command)

  # ─── Force static frameworks (so we can strip bitcode) ───
  use_frameworks! :linkage => :static

  # ─── Standard React Native Pod install ───
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'].nil? || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  post_install do |installer|
    # ─── React Native post-install helper ───
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # ─── Disable resource-bundle code signing (Xcode 14+) ───
    installer.target_installation_results.pod_target_installation_results.each do |pod_name, target_result|
      target_result.resource_bundle_targets.each do |bundle_target|
        bundle_target.build_configurations.each do |c|
          c.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end

    # ─── FORCE-STRIP BITCODE FROM TWILIOVIDEO FRAMEWORK ───
    bitcode_strip_path = `xcrun --find bitcode_strip`.chomp
    def strip_bitcode(bitcode_strip, framework_relative)
      full_path = File.join(Dir.pwd, framework_relative)
      command = "#{bitcode_strip} #{full_path} -r -o #{full_path}"
      puts "Stripping bitcode: #{command}"
      system(command)
    end

    # **Adjust this path if necessary**, but for react-native-twilio-video-webrtc@3.x it's usually:
    framework_paths = [
      "Pods/TwilioVideo/TwilioVideo.framework/TwilioVideo"
    ]

    framework_paths.each do |rel_path|
      strip_bitcode(bitcode_strip_path, rel_path)
    end
    # ───────────────────────────────────────────────────────────
  end
end
